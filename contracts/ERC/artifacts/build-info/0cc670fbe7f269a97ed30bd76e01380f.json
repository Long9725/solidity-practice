{
	"id": "0cc670fbe7f269a97ed30bd76e01380f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ERC/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >= 0.7.0 < 0.9.0;\n\ninterface IERC165 {\n    function supportsInterface(bytes4 interfaceId) external view returns(bool);\n}\n\ncontract ERC165 is IERC165 {\n    mapping(bytes4 => bool) private _supportedInterfaces;\n\n    function calcFingerPrint() public pure returns(bytes4) {\n        return bytes4(keccak256('supportsInterface(bytes4)'));\n    }\n\n    function supportsInterface(bytes4 interfaceId) external override view returns(bool) {\n        return _supportedInterfaces[interfaceId];\n    }\n\n    function _registerInterface(bytes4 interfaceId) public {\n        require(interfaceId != 0xffffffff, \"ERC165: invalid interface\");\n        _supportedInterfaces[interfaceId] = true;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/ERC/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "_registerInterface",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "calcFingerPrint",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC/ERC165.sol\":170:727  contract ERC165 is IERC165 {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC/ERC165.sol\":170:727  contract ERC165 is IERC165 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x068417d9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8b1ccaee\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC/ERC165.sol\":393:534  function supportsInterface(bytes4 interfaceId) external override view returns(bool) {... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC/ERC165.sol\":540:725  function _registerInterface(bytes4 interfaceId) public {... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_13:\n      tag_14\n      jump\t// in\n    tag_12:\n      stop\n        /* \"contracts/ERC/ERC165.sol\":262:387  function calcFingerPrint() public pure returns(bytes4) {... */\n    tag_5:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC/ERC165.sol\":393:534  function supportsInterface(bytes4 interfaceId) external override view returns(bool) {... */\n    tag_9:\n        /* \"contracts/ERC/ERC165.sol\":471:475  bool */\n      0x00\n        /* \"contracts/ERC/ERC165.sol\":494:514  _supportedInterfaces */\n      dup1\n        /* \"contracts/ERC/ERC165.sol\":494:527  _supportedInterfaces[interfaceId] */\n      0x00\n        /* \"contracts/ERC/ERC165.sol\":515:526  interfaceId */\n      dup4\n        /* \"contracts/ERC/ERC165.sol\":494:527  _supportedInterfaces[interfaceId] */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ERC/ERC165.sol\":487:527  return _supportedInterfaces[interfaceId] */\n      swap1\n      pop\n        /* \"contracts/ERC/ERC165.sol\":393:534  function supportsInterface(bytes4 interfaceId) external override view returns(bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC/ERC165.sol\":540:725  function _registerInterface(bytes4 interfaceId) public {... */\n    tag_14:\n        /* \"contracts/ERC/ERC165.sol\":628:638  0xffffffff */\n      0xffffffff\n        /* \"contracts/ERC/ERC165.sol\":613:638  interfaceId != 0xffffffff */\n      0xe0\n      shl\n        /* \"contracts/ERC/ERC165.sol\":613:624  interfaceId */\n      dup2\n        /* \"contracts/ERC/ERC165.sol\":613:638  interfaceId != 0xffffffff */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub\n        /* \"contracts/ERC/ERC165.sol\":605:668  require(interfaceId != 0xffffffff, \"ERC165: invalid interface\") */\n      tag_21\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_22\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_21:\n        /* \"contracts/ERC/ERC165.sol\":714:718  true */\n      0x01\n        /* \"contracts/ERC/ERC165.sol\":678:698  _supportedInterfaces */\n      0x00\n        /* \"contracts/ERC/ERC165.sol\":678:711  _supportedInterfaces[interfaceId] */\n      dup1\n        /* \"contracts/ERC/ERC165.sol\":699:710  interfaceId */\n      dup4\n        /* \"contracts/ERC/ERC165.sol\":678:711  _supportedInterfaces[interfaceId] */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERC/ERC165.sol\":678:718  _supportedInterfaces[interfaceId] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC/ERC165.sol\":540:725  function _registerInterface(bytes4 interfaceId) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/ERC/ERC165.sol\":262:387  function calcFingerPrint() public pure returns(bytes4) {... */\n    tag_16:\n        /* \"contracts/ERC/ERC165.sol\":309:315  bytes4 */\n      0x00\n        /* \"contracts/ERC/ERC165.sol\":341:379  keccak256('supportsInterface(bytes4)') */\n      0x01ffc9a7a5cef8baa21ed3c5c0d7e23accb804b619e9333b597f47a0d84076e2\n        /* \"contracts/ERC/ERC165.sol\":327:380  return bytes4(keccak256('supportsInterface(bytes4)')) */\n      swap1\n      pop\n        /* \"contracts/ERC/ERC165.sol\":262:387  function calcFingerPrint() public pure returns(bytes4) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_26:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_28:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_29:\n        /* \"#utility.yul\":561:584   */\n      tag_43\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_28\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_44\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_44:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_30:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_46\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_29\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_8:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_48\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_49\n      tag_26\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":833:952   */\n    tag_48:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_50\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_30\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_31:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_32:\n        /* \"#utility.yul\":1268:1289   */\n      tag_53\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_31\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_11:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_55\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_32\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1633   */\n    tag_33:\n        /* \"#utility.yul\":1603:1626   */\n      tag_57\n        /* \"#utility.yul\":1620:1625   */\n      dup2\n        /* \"#utility.yul\":1603:1626   */\n      tag_28\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1598:1601   */\n      dup3\n        /* \"#utility.yul\":1591:1627   */\n      mstore\n        /* \"#utility.yul\":1518:1633   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1639:1857   */\n    tag_18:\n        /* \"#utility.yul\":1730:1734   */\n      0x00\n        /* \"#utility.yul\":1768:1770   */\n      0x20\n        /* \"#utility.yul\":1757:1766   */\n      dup3\n        /* \"#utility.yul\":1753:1771   */\n      add\n        /* \"#utility.yul\":1745:1771   */\n      swap1\n      pop\n        /* \"#utility.yul\":1781:1850   */\n      tag_59\n        /* \"#utility.yul\":1847:1848   */\n      0x00\n        /* \"#utility.yul\":1836:1845   */\n      dup4\n        /* \"#utility.yul\":1832:1849   */\n      add\n        /* \"#utility.yul\":1823:1829   */\n      dup5\n        /* \"#utility.yul\":1781:1850   */\n      tag_33\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1639:1857   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1863:2032   */\n    tag_34:\n        /* \"#utility.yul\":1947:1958   */\n      0x00\n        /* \"#utility.yul\":1981:1987   */\n      dup3\n        /* \"#utility.yul\":1976:1979   */\n      dup3\n        /* \"#utility.yul\":1969:1988   */\n      mstore\n        /* \"#utility.yul\":2021:2025   */\n      0x20\n        /* \"#utility.yul\":2016:2019   */\n      dup3\n        /* \"#utility.yul\":2012:2026   */\n      add\n        /* \"#utility.yul\":1997:2026   */\n      swap1\n      pop\n        /* \"#utility.yul\":1863:2032   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2213   */\n    tag_35:\n        /* \"#utility.yul\":2178:2205   */\n      0x4552433136353a20696e76616c696420696e7465726661636500000000000000\n        /* \"#utility.yul\":2174:2175   */\n      0x00\n        /* \"#utility.yul\":2166:2172   */\n      dup3\n        /* \"#utility.yul\":2162:2176   */\n      add\n        /* \"#utility.yul\":2155:2206   */\n      mstore\n        /* \"#utility.yul\":2038:2213   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2585   */\n    tag_36:\n        /* \"#utility.yul\":2361:2364   */\n      0x00\n        /* \"#utility.yul\":2382:2449   */\n      tag_63\n        /* \"#utility.yul\":2446:2448   */\n      0x19\n        /* \"#utility.yul\":2441:2444   */\n      dup4\n        /* \"#utility.yul\":2382:2449   */\n      tag_34\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":2375:2449   */\n      swap2\n      pop\n        /* \"#utility.yul\":2458:2551   */\n      tag_64\n        /* \"#utility.yul\":2547:2550   */\n      dup3\n        /* \"#utility.yul\":2458:2551   */\n      tag_35\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":2576:2578   */\n      0x20\n        /* \"#utility.yul\":2571:2574   */\n      dup3\n        /* \"#utility.yul\":2567:2579   */\n      add\n        /* \"#utility.yul\":2560:2579   */\n      swap1\n      pop\n        /* \"#utility.yul\":2219:2585   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2591:3010   */\n    tag_23:\n        /* \"#utility.yul\":2757:2761   */\n      0x00\n        /* \"#utility.yul\":2795:2797   */\n      0x20\n        /* \"#utility.yul\":2784:2793   */\n      dup3\n        /* \"#utility.yul\":2780:2798   */\n      add\n        /* \"#utility.yul\":2772:2798   */\n      swap1\n      pop\n        /* \"#utility.yul\":2844:2853   */\n      dup2\n        /* \"#utility.yul\":2838:2842   */\n      dup2\n        /* \"#utility.yul\":2834:2854   */\n      sub\n        /* \"#utility.yul\":2830:2831   */\n      0x00\n        /* \"#utility.yul\":2819:2828   */\n      dup4\n        /* \"#utility.yul\":2815:2832   */\n      add\n        /* \"#utility.yul\":2808:2855   */\n      mstore\n        /* \"#utility.yul\":2872:3003   */\n      tag_66\n        /* \"#utility.yul\":2998:3002   */\n      dup2\n        /* \"#utility.yul\":2872:3003   */\n      tag_36\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":2864:3003   */\n      swap1\n      pop\n        /* \"#utility.yul\":2591:3010   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a703c0dc77143bec24d73da91fdeed0642a4ab8f6676ef789092d9fcad6b77e264736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506103b0806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063068417d9146100765780638b1ccaee14610092575b600080fd5b610060600480360381019061005b9190610270565b6100b0565b60405161006d91906102b8565b60405180910390f35b610090600480360381019061008b9190610270565b610117565b005b61009a6101eb565b6040516100a791906102e2565b60405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361017f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101769061035a565b60405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60007f01ffc9a7a5cef8baa21ed3c5c0d7e23accb804b619e9333b597f47a0d84076e2905090565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61024d81610218565b811461025857600080fd5b50565b60008135905061026a81610244565b92915050565b60006020828403121561028657610285610213565b5b60006102948482850161025b565b91505092915050565b60008115159050919050565b6102b28161029d565b82525050565b60006020820190506102cd60008301846102a9565b92915050565b6102dc81610218565b82525050565b60006020820190506102f760008301846102d3565b92915050565b600082825260208201905092915050565b7f4552433136353a20696e76616c696420696e7465726661636500000000000000600082015250565b60006103446019836102fd565b915061034f8261030e565b602082019050919050565b6000602082019050818103600083015261037381610337565b905091905056fea2646970667358221220a703c0dc77143bec24d73da91fdeed0642a4ab8f6676ef789092d9fcad6b77e264736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B0 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x68417D9 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x8B1CCAEE EQ PUSH2 0x92 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x270 JUMP JUMPDEST PUSH2 0xB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x270 JUMP JUMPDEST PUSH2 0x117 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9A PUSH2 0x1EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA7 SWAP2 SWAP1 PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x17F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x176 SWAP1 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A7A5CEF8BAA21ED3C5C0D7E23ACCB804B619E9333B597F47A0D84076E2 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24D DUP2 PUSH2 0x218 JUMP JUMPDEST DUP2 EQ PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x26A DUP2 PUSH2 0x244 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x286 JUMPI PUSH2 0x285 PUSH2 0x213 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x294 DUP5 DUP3 DUP6 ADD PUSH2 0x25B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B2 DUP2 PUSH2 0x29D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2CD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2DC DUP2 PUSH2 0x218 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433136353A20696E76616C696420696E7465726661636500000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x344 PUSH1 0x19 DUP4 PUSH2 0x2FD JUMP JUMPDEST SWAP2 POP PUSH2 0x34F DUP3 PUSH2 0x30E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x373 DUP2 PUSH2 0x337 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 SUB 0xC0 0xDC PUSH24 0x143BEC24D73DA91FDEED0642A4AB8F6676EF789092D9FCAD PUSH12 0x77E264736F6C634300080F00 CALLER ",
							"sourceMap": "170:557:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_registerInterface_60": {
									"entryPoint": 279,
									"id": 60,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calcFingerPrint_28": {
									"entryPoint": 491,
									"id": 28,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@supportsInterface_41": {
									"entryPoint": 176,
									"id": 41,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_3b0a152fa71ea3593842bbb0eaebd4974ed4d29c6fef08cdd0cfd96ba8ab453a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 823,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b0a152fa71ea3593842bbb0eaebd4974ed4d29c6fef08cdd0cfd96ba8ab453a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 536,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 531,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_3b0a152fa71ea3593842bbb0eaebd4974ed4d29c6fef08cdd0cfd96ba8ab453a": {
									"entryPoint": 782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 580,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3013:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:1",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:1",
														"type": ""
													}
												],
												"src": "334:149:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:1"
															},
															"nodeType": "YulIf",
															"src": "541:62:1"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:1",
														"type": ""
													}
												],
												"src": "489:120:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:1"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:1",
														"type": ""
													}
												],
												"src": "615:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:1"
															},
															"nodeType": "YulIf",
															"src": "833:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:1",
														"type": ""
													}
												],
												"src": "758:327:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:1",
														"type": ""
													}
												],
												"src": "1091:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:1",
														"type": ""
													}
												],
												"src": "1187:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:1",
														"type": ""
													}
												],
												"src": "1302:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1581:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1598:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1620:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1603:16:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1603:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1591:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1591:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1591:36:1"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1569:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1576:3:1",
														"type": ""
													}
												],
												"src": "1518:115:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1735:122:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1745:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1757:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1768:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1753:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1753:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1745:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1836:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1847:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1832:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1832:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1781:41:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1781:69:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1781:69:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1707:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1719:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1730:4:1",
														"type": ""
													}
												],
												"src": "1639:218:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1959:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1976:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1981:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1969:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1969:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1969:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1997:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2016:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2021:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2012:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2012:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1997:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1931:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1936:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1947:11:1",
														"type": ""
													}
												],
												"src": "1863:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2144:69:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2166:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2174:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2162:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2162:14:1"
																	},
																	{
																		"hexValue": "4552433136353a20696e76616c696420696e74657266616365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2178:27:1",
																		"type": "",
																		"value": "ERC165: invalid interface"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2155:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2155:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2155:51:1"
														}
													]
												},
												"name": "store_literal_in_memory_3b0a152fa71ea3593842bbb0eaebd4974ed4d29c6fef08cdd0cfd96ba8ab453a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2136:6:1",
														"type": ""
													}
												],
												"src": "2038:175:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2365:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2375:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2441:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2446:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2382:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2382:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2375:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2547:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3b0a152fa71ea3593842bbb0eaebd4974ed4d29c6fef08cdd0cfd96ba8ab453a",
																	"nodeType": "YulIdentifier",
																	"src": "2458:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2458:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2458:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2560:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2571:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2576:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2567:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2567:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2560:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3b0a152fa71ea3593842bbb0eaebd4974ed4d29c6fef08cdd0cfd96ba8ab453a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2353:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2361:3:1",
														"type": ""
													}
												],
												"src": "2219:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2762:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2772:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2784:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2795:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2780:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2780:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2772:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2819:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2830:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2815:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2838:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2844:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2834:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2834:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2808:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2808:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2808:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2864:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2998:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3b0a152fa71ea3593842bbb0eaebd4974ed4d29c6fef08cdd0cfd96ba8ab453a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2872:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2872:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2864:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b0a152fa71ea3593842bbb0eaebd4974ed4d29c6fef08cdd0cfd96ba8ab453a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2742:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2757:4:1",
														"type": ""
													}
												],
												"src": "2591:419:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_3b0a152fa71ea3593842bbb0eaebd4974ed4d29c6fef08cdd0cfd96ba8ab453a(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC165: invalid interface\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b0a152fa71ea3593842bbb0eaebd4974ed4d29c6fef08cdd0cfd96ba8ab453a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_3b0a152fa71ea3593842bbb0eaebd4974ed4d29c6fef08cdd0cfd96ba8ab453a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b0a152fa71ea3593842bbb0eaebd4974ed4d29c6fef08cdd0cfd96ba8ab453a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b0a152fa71ea3593842bbb0eaebd4974ed4d29c6fef08cdd0cfd96ba8ab453a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063068417d9146100765780638b1ccaee14610092575b600080fd5b610060600480360381019061005b9190610270565b6100b0565b60405161006d91906102b8565b60405180910390f35b610090600480360381019061008b9190610270565b610117565b005b61009a6101eb565b6040516100a791906102e2565b60405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361017f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101769061035a565b60405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60007f01ffc9a7a5cef8baa21ed3c5c0d7e23accb804b619e9333b597f47a0d84076e2905090565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61024d81610218565b811461025857600080fd5b50565b60008135905061026a81610244565b92915050565b60006020828403121561028657610285610213565b5b60006102948482850161025b565b91505092915050565b60008115159050919050565b6102b28161029d565b82525050565b60006020820190506102cd60008301846102a9565b92915050565b6102dc81610218565b82525050565b60006020820190506102f760008301846102d3565b92915050565b600082825260208201905092915050565b7f4552433136353a20696e76616c696420696e7465726661636500000000000000600082015250565b60006103446019836102fd565b915061034f8261030e565b602082019050919050565b6000602082019050818103600083015261037381610337565b905091905056fea2646970667358221220a703c0dc77143bec24d73da91fdeed0642a4ab8f6676ef789092d9fcad6b77e264736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x68417D9 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x8B1CCAEE EQ PUSH2 0x92 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x270 JUMP JUMPDEST PUSH2 0xB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x270 JUMP JUMPDEST PUSH2 0x117 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9A PUSH2 0x1EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA7 SWAP2 SWAP1 PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x17F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x176 SWAP1 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A7A5CEF8BAA21ED3C5C0D7E23ACCB804B619E9333B597F47A0D84076E2 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24D DUP2 PUSH2 0x218 JUMP JUMPDEST DUP2 EQ PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x26A DUP2 PUSH2 0x244 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x286 JUMPI PUSH2 0x285 PUSH2 0x213 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x294 DUP5 DUP3 DUP6 ADD PUSH2 0x25B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B2 DUP2 PUSH2 0x29D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2CD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2DC DUP2 PUSH2 0x218 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433136353A20696E76616C696420696E7465726661636500000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x344 PUSH1 0x19 DUP4 PUSH2 0x2FD JUMP JUMPDEST SWAP2 POP PUSH2 0x34F DUP3 PUSH2 0x30E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x373 DUP2 PUSH2 0x337 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 SUB 0xC0 0xDC PUSH24 0x143BEC24D73DA91FDEED0642A4AB8F6676EF789092D9FCAD PUSH12 0x77E264736F6C634300080F00 CALLER ",
							"sourceMap": "170:557:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;393:141;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;540:185;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;262:125;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;393:141;471:4;494:20;:33;515:11;494:33;;;;;;;;;;;;;;;;;;;;;;;;;;;487:40;;393:141;;;:::o;540:185::-;628:10;613:25;;:11;:25;;;;605:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;714:4;678:20;:33;699:11;678:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;540:185;:::o;262:125::-;309:6;341:38;327:53;;262:125;:::o;88:117:1:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:115::-;1603:23;1620:5;1603:23;:::i;:::-;1598:3;1591:36;1518:115;;:::o;1639:218::-;1730:4;1768:2;1757:9;1753:18;1745:26;;1781:69;1847:1;1836:9;1832:17;1823:6;1781:69;:::i;:::-;1639:218;;;;:::o;1863:169::-;1947:11;1981:6;1976:3;1969:19;2021:4;2016:3;2012:14;1997:29;;1863:169;;;;:::o;2038:175::-;2178:27;2174:1;2166:6;2162:14;2155:51;2038:175;:::o;2219:366::-;2361:3;2382:67;2446:2;2441:3;2382:67;:::i;:::-;2375:74;;2458:93;2547:3;2458:93;:::i;:::-;2576:2;2571:3;2567:12;2560:19;;2219:366;;;:::o;2591:419::-;2757:4;2795:2;2784:9;2780:18;2772:26;;2844:9;2838:4;2834:20;2830:1;2819:9;2815:17;2808:47;2872:131;2998:4;2872:131;:::i;:::-;2864:139;;2591:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "188800",
								"executionCost": "232",
								"totalCost": "189032"
							},
							"external": {
								"_registerInterface(bytes4)": "24813",
								"calcFingerPrint()": "365",
								"supportsInterface(bytes4)": "2824"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 170,
									"end": 727,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 170,
									"end": 727,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 170,
									"end": 727,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 170,
									"end": 727,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 170,
									"end": 727,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 727,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 170,
									"end": 727,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 170,
									"end": 727,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 170,
									"end": 727,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 727,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 727,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 170,
									"end": 727,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 170,
									"end": 727,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 170,
									"end": 727,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 170,
									"end": 727,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 170,
									"end": 727,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 727,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 170,
									"end": 727,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 727,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 170,
									"end": 727,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 727,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a703c0dc77143bec24d73da91fdeed0642a4ab8f6676ef789092d9fcad6b77e264736f6c634300080f0033",
									".code": [
										{
											"begin": 170,
											"end": 727,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 170,
											"end": 727,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 170,
											"end": 727,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 170,
											"end": 727,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 170,
											"end": 727,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 727,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 170,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 170,
											"end": 727,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 727,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 727,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 727,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 170,
											"end": 727,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 170,
											"end": 727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 170,
											"end": 727,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 170,
											"end": 727,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 727,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 170,
											"end": 727,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 170,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 727,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 727,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 727,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 170,
											"end": 727,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 170,
											"end": 727,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 170,
											"end": 727,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 727,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 170,
											"end": 727,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 170,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 170,
											"end": 727,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 727,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 727,
											"name": "PUSH",
											"source": 0,
											"value": "68417D9"
										},
										{
											"begin": 170,
											"end": 727,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 170,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 727,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 727,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 727,
											"name": "PUSH",
											"source": 0,
											"value": "8B1CCAEE"
										},
										{
											"begin": 170,
											"end": 727,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 170,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 170,
											"end": 727,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 727,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 170,
											"end": 727,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 727,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 727,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 393,
											"end": 534,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 393,
											"end": 534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 393,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 393,
											"end": 534,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 393,
											"end": 534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 393,
											"end": 534,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 393,
											"end": 534,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 393,
											"end": 534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 393,
											"end": 534,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 393,
											"end": 534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 393,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 393,
											"end": 534,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 393,
											"end": 534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 393,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 393,
											"end": 534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 393,
											"end": 534,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 393,
											"end": 534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 393,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 393,
											"end": 534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 393,
											"end": 534,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 393,
											"end": 534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 393,
											"end": 534,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 393,
											"end": 534,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 393,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 393,
											"end": 534,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 393,
											"end": 534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 393,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 393,
											"end": 534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 393,
											"end": 534,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 393,
											"end": 534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 393,
											"end": 534,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 393,
											"end": 534,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 393,
											"end": 534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 393,
											"end": 534,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 393,
											"end": 534,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 393,
											"end": 534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 393,
											"end": 534,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 540,
											"end": 725,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 540,
											"end": 725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 540,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 540,
											"end": 725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 540,
											"end": 725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 540,
											"end": 725,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 540,
											"end": 725,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 540,
											"end": 725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 540,
											"end": 725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 540,
											"end": 725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 540,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 540,
											"end": 725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 540,
											"end": 725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 540,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 540,
											"end": 725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 540,
											"end": 725,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 540,
											"end": 725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 540,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 540,
											"end": 725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 540,
											"end": 725,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 540,
											"end": 725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 540,
											"end": 725,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 262,
											"end": 387,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 262,
											"end": 387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 262,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 262,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 262,
											"end": 387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 262,
											"end": 387,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 262,
											"end": 387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 262,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 387,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 262,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 262,
											"end": 387,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 262,
											"end": 387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 262,
											"end": 387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 262,
											"end": 387,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 262,
											"end": 387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 262,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 387,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 262,
											"end": 387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 387,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 262,
											"end": 387,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 262,
											"end": 387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 387,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 393,
											"end": 534,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 393,
											"end": 534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 471,
											"end": 475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 494,
											"end": 514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 494,
											"end": 527,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 526,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 494,
											"end": 527,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 494,
											"end": 527,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 494,
											"end": 527,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 494,
											"end": 527,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 494,
											"end": 527,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 494,
											"end": 527,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 494,
											"end": 527,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 494,
											"end": 527,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 494,
											"end": 527,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 494,
											"end": 527,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 494,
											"end": 527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 494,
											"end": 527,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 494,
											"end": 527,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 494,
											"end": 527,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 494,
											"end": 527,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 494,
											"end": 527,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 494,
											"end": 527,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 494,
											"end": 527,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 494,
											"end": 527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 494,
											"end": 527,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 494,
											"end": 527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 494,
											"end": 527,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 494,
											"end": 527,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 494,
											"end": 527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 494,
											"end": 527,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 494,
											"end": 527,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 494,
											"end": 527,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 487,
											"end": 527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 487,
											"end": 527,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 393,
											"end": 534,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 393,
											"end": 534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 393,
											"end": 534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 393,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 540,
											"end": 725,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 540,
											"end": 725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 613,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 613,
											"end": 638,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 613,
											"end": 624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 613,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 613,
											"end": 638,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 613,
											"end": 638,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 613,
											"end": 638,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 605,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 605,
											"end": 668,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 605,
											"end": 668,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 605,
											"end": 668,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 605,
											"end": 668,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 605,
											"end": 668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 605,
											"end": 668,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 605,
											"end": 668,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 605,
											"end": 668,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 605,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 605,
											"end": 668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 605,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 605,
											"end": 668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 605,
											"end": 668,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 605,
											"end": 668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 605,
											"end": 668,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 605,
											"end": 668,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 605,
											"end": 668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 605,
											"end": 668,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 605,
											"end": 668,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 605,
											"end": 668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 605,
											"end": 668,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 605,
											"end": 668,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 605,
											"end": 668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 714,
											"end": 718,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 678,
											"end": 698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 678,
											"end": 711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 699,
											"end": 710,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 678,
											"end": 711,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 678,
											"end": 711,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 678,
											"end": 711,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 678,
											"end": 711,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 678,
											"end": 711,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 678,
											"end": 711,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 678,
											"end": 711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 678,
											"end": 711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 678,
											"end": 711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 678,
											"end": 711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 678,
											"end": 711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 678,
											"end": 711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 678,
											"end": 711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 678,
											"end": 711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 678,
											"end": 711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 678,
											"end": 711,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 678,
											"end": 711,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 678,
											"end": 711,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 678,
											"end": 718,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 678,
											"end": 718,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 678,
											"end": 718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 678,
											"end": 718,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 678,
											"end": 718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 678,
											"end": 718,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 678,
											"end": 718,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 678,
											"end": 718,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 678,
											"end": 718,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 678,
											"end": 718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 678,
											"end": 718,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 678,
											"end": 718,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 678,
											"end": 718,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 678,
											"end": 718,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 678,
											"end": 718,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 678,
											"end": 718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 678,
											"end": 718,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 678,
											"end": 718,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 540,
											"end": 725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 540,
											"end": 725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 262,
											"end": 387,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 262,
											"end": 387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 309,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7A5CEF8BAA21ED3C5C0D7E23ACCB804B619E9333B597F47A0D84076E2"
										},
										{
											"begin": 327,
											"end": 380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 327,
											"end": 380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 262,
											"end": 387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1633,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1518,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1603,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1620,
											"end": 1625,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1603,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1603,
											"end": 1626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1603,
											"end": 1626,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1603,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1601,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1591,
											"end": 1627,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1639,
											"end": 1857,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1639,
											"end": 1857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1734,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1768,
											"end": 1770,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1757,
											"end": 1766,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1771,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1745,
											"end": 1771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1745,
											"end": 1771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1847,
											"end": 1848,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1781,
											"end": 1850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1850,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1781,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1639,
											"end": 1857,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1639,
											"end": 1857,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1639,
											"end": 1857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1639,
											"end": 1857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1639,
											"end": 1857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 2032,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1863,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1947,
											"end": 1958,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 1987,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1979,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 1988,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2025,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2016,
											"end": 2019,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2012,
											"end": 2026,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1997,
											"end": 2026,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1997,
											"end": 2026,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 2032,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 2032,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 2032,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 2032,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2213,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2038,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2205,
											"name": "PUSH",
											"source": 1,
											"value": "4552433136353A20696E76616C696420696E7465726661636500000000000000"
										},
										{
											"begin": 2174,
											"end": 2175,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2176,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2585,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2219,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2361,
											"end": 2364,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2382,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2446,
											"end": 2448,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2441,
											"end": 2444,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2382,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2382,
											"end": 2449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2382,
											"end": 2449,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2382,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2449,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2458,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2547,
											"end": 2550,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2458,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2458,
											"end": 2551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2458,
											"end": 2551,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2458,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2576,
											"end": 2578,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2571,
											"end": 2574,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2591,
											"end": 3010,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2591,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 2761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2795,
											"end": 2797,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2784,
											"end": 2793,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2798,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2772,
											"end": 2798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2772,
											"end": 2798,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2844,
											"end": 2853,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2838,
											"end": 2842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2854,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2831,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2828,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2815,
											"end": 2832,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2808,
											"end": 2855,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2998,
											"end": 3002,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2872,
											"end": 3003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 3003,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2872,
											"end": 3003,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 3003,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 3003,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2591,
											"end": 3010,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2591,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2591,
											"end": 3010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2591,
											"end": 3010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/ERC/ERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_registerInterface(bytes4)": "068417d9",
							"calcFingerPrint()": "8b1ccaee",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"_registerInterface\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calcFingerPrint\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC/ERC165.sol\":{\"keccak256\":\"0x4bd68992a2839e84222fcb90eee6a2813057ff2af17b1bc601ad6d5060a57c46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b90faa715b2e3a36bbea20079eba0b74b5cb0719a46a4c14632127fcada09aa\",\"dweb:/ipfs/QmUyQTHQvBhueNEER7ctK6xktktFY5XBSmRfXXS47gx8iE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 15,
								"contract": "contracts/ERC/ERC165.sol:ERC165",
								"label": "_supportedInterfaces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes4,t_bool)"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes4": {
								"encoding": "inplace",
								"label": "bytes4",
								"numberOfBytes": "4"
							},
							"t_mapping(t_bytes4,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes4",
								"label": "mapping(bytes4 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC/ERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC/ERC165.sol\":{\"keccak256\":\"0x4bd68992a2839e84222fcb90eee6a2813057ff2af17b1bc601ad6d5060a57c46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b90faa715b2e3a36bbea20079eba0b74b5cb0719a46a4c14632127fcada09aa\",\"dweb:/ipfs/QmUyQTHQvBhueNEER7ctK6xktktFY5XBSmRfXXS47gx8iE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/ERC/ERC165.sol": {
				"ast": {
					"absolutePath": "contracts/ERC/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							61
						],
						"IERC165": [
							9
						]
					},
					"id": 62,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:33:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 9,
							"linearizedBaseContracts": [
								9
							],
							"name": "IERC165",
							"nameLocation": "77:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "01ffc9a7",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "100:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "125:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "118:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "118:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "117:20:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "160:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "160:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "159:6:0"
									},
									"scope": 9,
									"src": "91:75:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 62,
							"src": "67:101:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 10,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 9,
										"src": "189:7:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "189:7:0"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 61,
							"linearizedBaseContracts": [
								61,
								9
							],
							"name": "ERC165",
							"nameLocation": "179:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "_supportedInterfaces",
									"nameLocation": "235:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 61,
									"src": "203:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
										"typeString": "mapping(bytes4 => bool)"
									},
									"typeName": {
										"id": 14,
										"keyType": {
											"id": 12,
											"name": "bytes4",
											"nodeType": "ElementaryTypeName",
											"src": "211:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes4",
												"typeString": "bytes4"
											}
										},
										"nodeType": "Mapping",
										"src": "203:23:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
											"typeString": "mapping(bytes4 => bool)"
										},
										"valueType": {
											"id": 13,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "221:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "317:70:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "737570706f727473496e746572666163652862797465733429",
																	"id": 23,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "351:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_01ffc9a7a5cef8baa21ed3c5c0d7e23accb804b619e9333b597f47a0d84076e2",
																		"typeString": "literal_string \"supportsInterface(bytes4)\""
																	},
																	"value": "supportsInterface(bytes4)"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_01ffc9a7a5cef8baa21ed3c5c0d7e23accb804b619e9333b597f47a0d84076e2",
																		"typeString": "literal_string \"supportsInterface(bytes4)\""
																	}
																],
																"id": 22,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "341:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "341:38:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 21,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "334:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes4_$",
															"typeString": "type(bytes4)"
														},
														"typeName": {
															"id": 20,
															"name": "bytes4",
															"nodeType": "ElementaryTypeName",
															"src": "334:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "334:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 19,
												"id": 26,
												"nodeType": "Return",
												"src": "327:53:0"
											}
										]
									},
									"functionSelector": "8b1ccaee",
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcFingerPrint",
									"nameLocation": "271:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "286:2:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "309:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 17,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "309:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "308:8:0"
									},
									"scope": 61,
									"src": "262:125:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										8
									],
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "477:57:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 36,
														"name": "_supportedInterfaces",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "494:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
															"typeString": "mapping(bytes4 => bool)"
														}
													},
													"id": 38,
													"indexExpression": {
														"id": 37,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "515:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "494:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 35,
												"id": 39,
												"nodeType": "Return",
												"src": "487:40:0"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 41,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "402:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 32,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "449:8:0"
									},
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "427:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "420:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 29,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "420:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:20:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "471:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 33,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "471:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:6:0"
									},
									"scope": 61,
									"src": "393:141:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "595:130:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 47,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "613:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30786666666666666666",
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "628:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967295_by_1",
																	"typeString": "int_const 4294967295"
																},
																"value": "0xffffffff"
															},
															"src": "613:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433136353a20696e76616c696420696e74657266616365",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "640:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3b0a152fa71ea3593842bbb0eaebd4974ed4d29c6fef08cdd0cfd96ba8ab453a",
																"typeString": "literal_string \"ERC165: invalid interface\""
															},
															"value": "ERC165: invalid interface"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3b0a152fa71ea3593842bbb0eaebd4974ed4d29c6fef08cdd0cfd96ba8ab453a",
																"typeString": "literal_string \"ERC165: invalid interface\""
															}
														],
														"id": 46,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "605:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "605:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "605:63:0"
											},
											{
												"expression": {
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 53,
															"name": "_supportedInterfaces",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "678:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
																"typeString": "mapping(bytes4 => bool)"
															}
														},
														"id": 55,
														"indexExpression": {
															"id": 54,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "699:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "678:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "714:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "678:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "678:40:0"
											}
										]
									},
									"functionSelector": "068417d9",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_registerInterface",
									"nameLocation": "549:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "575:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "568:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "568:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "567:20:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "595:0:0"
									},
									"scope": 61,
									"src": "540:185:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 62,
							"src": "170:557:0",
							"usedErrors": []
						}
					],
					"src": "32:695:0"
				},
				"id": 0
			}
		}
	}
}